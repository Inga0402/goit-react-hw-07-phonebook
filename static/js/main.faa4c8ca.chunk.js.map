{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/action.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/Filter/Filter.jsx","redux/operations.js","components/Button/Button.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactReducer","devTools","process","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","name","includes","getFilteredContacts","Filter","value","useSelector","dispatch","useDispatch","className","st","label","input","type","onChange","event","target","axios","defaults","baseURL","Button","props","ContactList","handleDeleteContact","a","delete","deleteContact","map","number","listItem","btn","onClick","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","nameId","shortid","generate","contactPhoneNumberId","handleFormChange","resetForm","onSubmit","preventDefault","console","log","find","contact","toast","error","post","data","form","htmlFor","App","visibleContacts","useEffect","get","container","title","subtitle","length","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faa4c8ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__1OiPB\",\"name\":\"ContactList_name__3y1l7\",\"namber\":\"ContactList_namber__1BMmy\",\"btn\":\"ContactList_btn__1PijP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1oeLF\",\"title\":\"App_title__lsF99\",\"subtitle\":\"App_subtitle__2UkZc\",\"btn\":\"App_btn__3DYNN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__3iiGO\",\"label\":\"Filter_label__3DoQ-\",\"input\":\"Filter_input__1YLh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__39khy\",\"label\":\"ContactForm_label__cCLG3\",\"input\":\"ContactForm_input__yFxVr\",\"btn\":\"ContactForm_btn__2TIm1\",\"error\":\"ContactForm_error__1g9-B\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\n\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\n\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} from './action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const getFilteredContacts = contacts => {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      return contacts.filter(text =>\r\n        text.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    };\r\n    return getFilteredContacts(contacts);\r\n  },\r\n);\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/action';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport st from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={st.label}>\r\n      Find contact\r\n      <input\r\n        className={st.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event => dispatch(changeFilter(event.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    return dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    return dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ value, ...props }) => {\r\n  return <button {...props}>{value}</button>;\r\n};\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport { deleteContact } from '../../redux/operations';\r\nimport Button from '../Button';\r\nimport st from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const handleDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={st.listItem}>\r\n          <span className={st.name}>{name}:</span>\r\n          <span className={st.number}>{number}</span>\r\n          <Button\r\n            type=\"button\"\r\n            className={st.btn}\r\n            onClick={() => handleDeleteContact(id)}\r\n            value=\"Delete\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport Button from '../Button';\r\nimport st from './ContactForm.module.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ContactForm = () => {\r\n  const [contactName, setContactName] = useState('');\r\n  const [contactNumber, setContactNumber] = useState('');\r\n  const nameId = shortid.generate();\r\n  const dispatch = useDispatch();\r\n  const contactPhoneNumberId = shortid.generate();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleFormChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setContactName(value);\r\n        break;\r\n      case 'number':\r\n        setContactNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(contactName, contactNumber);\r\n    if (contactName === '') {\r\n      toast.error('Enter contact name');\r\n      return;\r\n    }\r\n    if (contacts.find(contact => contact.name === contactName)) {\r\n      toast.error(`${contactName} is already exists`);\r\n      resetForm();\r\n      return;\r\n    }\r\n    dispatch(addContact(contactName, contactNumber));\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setContactName('');\r\n    setContactNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={st.form} type=\"submit\">\r\n      <label htmlFor={nameId} className={st.label}>\r\n        Name\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={contactName}\r\n          onChange={handleFormChange}\r\n          id={nameId}\r\n        />\r\n      </label>\r\n      <label htmlFor={contactPhoneNumberId} className={st.label}>\r\n        Phone Number\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={contactNumber}\r\n          onChange={handleFormChange}\r\n          id={contactPhoneNumberId}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" className={st.btn} value=\"Create contact\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { getVisibleContacts, getContacts } from './redux/selectors';\nimport { fetchContacts } from './redux/operations';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport st from './App.module.css';\n\nfunction App() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div className={st.container}>\n      <h1 className={st.title}>PHONEBOOK</h1>\n      <ContactForm />\n      <h2 className={st.subtitle}>Contacts</h2>\n      {contacts.length > 1 && <Filter />}\n      {visibleContacts.length > 0 && <ContactList />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick={true}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}